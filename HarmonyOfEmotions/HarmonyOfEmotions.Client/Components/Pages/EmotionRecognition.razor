@page "/emotion-recognition"
@page "/emotion-recognition/{previewUrl}"
@inject MusicRecommenderSystemService MusicRecommenderSystemService
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<AuthorizeView>
	<NotAuthorized>
		<AccessDenied />
	</NotAuthorized>
	<Authorized>
		<h1>Emotion recognition demo</h1>

		@if (!string.IsNullOrEmpty(previewUrl))
		{
			<div class="emotion-info">
				<p class="info-label">Emotion recognition for the track:</p>
				@if (!string.IsNullOrEmpty(trackName))
				{
					<p class="track">@trackName</p>
				}
				else
				{
					<p class="track">@previewUrl</p>
				}
				<p class="info-label">Emotion predicted:</p>
				<p class="predicted-emotion">@emotion</p>
			</div>
		}



		<div class="row">
			<div class="col-md-3">
				<img src="surprise.png" style="widht:@surprise; height:@surprise" class="img-fluid" alt="Surprise" />
			</div>
			<div class="col-md-3">
				<img src="happiness.png" style="widht:@happiness; height:@happiness" class="img-fluid" alt="Happiness" />
			</div>
			<div class="col-md-3">
				<img src="restlessness.png" style="widht:@restlessness; height:@restlessness" class="img-fluid" alt="Restlessness" />
			</div>
			<div class="col-md-3">
				<img src="anger.png" style="widht:@anger; height:@anger" class="img-fluid" alt="Anger" />
			</div>
		</div>

	</Authorized>
</AuthorizeView>

@code {
	[Parameter]
	public string? previewUrl { get; set; }
	[Parameter]
	public string? trackName { get; set; }
	private string emotion = string.Empty;
	private string surprise = "50%";
	private string happiness = "50%";
	private string restlessness = "50%";
	private string anger = "50%";

	protected override async Task OnInitializedAsync()
	{
		if (!string.IsNullOrEmpty(previewUrl))
		{
			emotion = await MusicRecommenderSystemService.GetEmotionForTrack(previewUrl);

			switch (emotion)
			{
				case "Surprise":
					surprise = "100%";
					break;
				case "Happiness":
					happiness = "100%";
					break;
				case "Restlessness":
					restlessness = "100%";
					break;
				case "Anger":
					anger = "100%";
					break;
			}
			StateHasChanged();
		}
	}
}
