@page "/emotion-recognition"
@inject NavigationManager NavigationManager
@inject MusicRecommenderSystemService MusicRecommenderSystemService
@inherits ErrorHandlingComponentBase
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<AuthorizeView>
	<NotAuthorized>
		<AccessDenied />
	</NotAuthorized>
	<Authorized>
		<h1 class="my-4">Emotion recognition demo</h1>

		@if (!string.IsNullOrEmpty(previewUrl))
		{
			<div class="emotion-info">
				@if (!string.IsNullOrEmpty(trackName))
				{
					<p class="info-label">Emotion recognition for the track:</p>
					<p class="track">@trackName</p>
				}
				else
				{
					<p class="info-label">Emotion recognition for the track available at:</p>
					<a class="track wrap-url">@previewUrl</a>
				}
				<div class="card">
					<div class="card-body">
						@if (!hidden)
						{
							<audio autoplay controls><source src="@previewUrl" /></audio>
						}
						else
						{
							<audio controls muted><source src="@previewUrl" /></audio>
						}
					</div>
				</div>
				<p class="info-label">Emotion predicted:</p>
				@if (isLoading)
				{
					<div class="d-flex align-items-center">
						<span class="spinner-border spinner-border-sm me-4" role="status" aria-hidden="true"></span>
						<span class="sr-only">Loading...</span>
					</div>
				}
				else
				{
					<p class="predicted-emotion">@emotion</p>
				}
			</div>
		}

		<div class="row">
			<div class="col-3 align-content-center justify-content-center">
				<img src="surprise.png" style="height:@surprise" class="img-fluid" alt="Surprise" />
			</div>
			<div class="col-3 align-content-center justify-content-center">
				<img src="happiness.png" style="height:@happiness" class="img-fluid" alt="Happiness" />
			</div>
			<div class="col-3 align-content-center justify-content-center">
				<img src="restlessness.png" style="height:@restlessness" class="img-fluid" alt="Restlessness" />
			</div>
			<div class="col-3 align-content-center justify-content-center">
				<img src="anger.png" style="height:@anger" class="img-fluid" alt="Anger" />
			</div>
		</div>
	</Authorized>
</AuthorizeView>

@code {
	private string? previewUrl;
	private string? trackName;
	private string? emotion = string.Empty;
	private string surprise = "50%";
	private string happiness = "50%";
	private string restlessness = "50%";
	private string anger = "50%";
	private bool hidden = true;
	private bool isLoading = true;

	protected override async Task OnInitializedAsync()
	{
		var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
		var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
		previewUrl = query.Get("previewUrl");
		trackName = query.Get("trackName");

		if (!string.IsNullOrEmpty(previewUrl))
		{
			emotion = await MusicRecommenderSystemService.GetEmotionForTrack(previewUrl);

			switch (emotion)
			{
				case "Surprise":
					surprise = "100%";
					break;
				case "Happiness":
					happiness = "100%";
					break;
				case "Restlessness":
					restlessness = "100%";
					break;
				case "Anger":
					anger = "100%";
					break;
			}
			isLoading = false;
			StateHasChanged();
		}
	}
}
