@page "/"
@inject ZenQuotesService ZenQuotesService
@inject NavigationManager NavigationManager

<AuthenticatedContent>
	<AuthorizeView>
		<div class="background d-flex align-items-top justify-content-center">
			<div class="container">
				<div class="row">
					<div class="col-12">
						<h1 class="my-4 fw-bolder text-center">Welcome to <span class="text-primary">Harmony of Emotions</span></h1>
					</div>
					<div class="col-12">
						<div class="home-card card p-4">
							<div class="card-body">
								<div class="text-center mb-4">
									<span>You are logged in as <b>@context.User.Identity?.Name</b>. <a class="fw-bolder" href="/logout">Logout</a></span>
								</div>
								<div class="text-center mt-4">
									<p class="quote">"@quote"</p>
									<p class="quote-author mb-4">- @quoteAuthor</p>
									<p>Click on the button below to get music recommendations based on your mood!</p>
									<a class="btn btn-primary btn-md" href="/music-recommender-system">Get recommendations</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</AuthorizeView>
</AuthenticatedContent>

@code {
	private string quote = "Loading quote...";
	private string quoteAuthor = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var quoteResponse = await ZenQuotesService.FetchQuote();
			if (quoteResponse != null)
			{
				quote = quoteResponse.Quote!;
				quoteAuthor = quoteResponse.Author!;
			}
		}
		catch (Exception)
		{
			quote = "Could not load quote at this time.";
		}
	}
}
